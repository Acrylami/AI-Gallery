{"version":3,"sources":["images/drama.png","images/translate.png","images/style_transfer.png","images/construction.png","components/Card.js","components/CardList.js","images/logo.png","components/Heading.js","components/Home.js","components/Footer.js","data.js","components/InputImage.js","components/UploadBtn.js","images/input.png","images/swap.png","images/loading.gif","components/MemeSwapper.js","images/objects.png","components/Translator.js","images/content.png","images/style.png","images/transfer.png","components/StyleTransfer.js","components/Function.js","components/App.js","index.js"],"names":["Card","props","imgSrc","history","useHistory","mlFunct","memeImg","translatorImg","styleTransferImg","constructionImg","className","onClick","push","title","src","alt","CardList","mlFunctions","map","item","index","Heading","logoImg","replace","head","subHead","Home","Footer","href","target","rel","data","meme","translator","style","InputImage","input","handleImage","imgRef","imgText","id","ref","type","accept","name","display","onChange","htmlFor","UploadBtn","handleUploadBtn","btnText","MemeSwapper","useState","inputImg","setInput","imgBlob","setImgBlob","swapImg","output","setOutput","useRef","e","a","preventDefault","alert","loadingImg","current","scrollIntoView","behavior","FormData","append","options","method","body","fetch","response","text","resText","newSrc","console","log","files","URL","createObjectURL","Translator","objectImg","translate","setTranslate","detect","setDetect","setName","loadingRef","cocoSsd","model","predictions","length","nameSet","Set","i","add","class","size","iterator","values","value","next","JSON","stringify","json","visibility","StyleTransfer","contentImg","content","setContent","styleImg","setStyle","transferImg","transfer","setTransfer","contentBlob","setContentBlob","styleBlob","setStyleBlob","transferRef","Function","feature","useParams","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccad2cfb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/drama.b984f836.png\";","export default __webpack_public_path__ + \"static/media/translate.124f5d63.png\";","export default __webpack_public_path__ + \"static/media/style_transfer.73fe2647.png\";","export default __webpack_public_path__ + \"static/media/construction.471e90af.png\";","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport memeImg from '../images/drama.png';\r\nimport translatorImg from '../images/translate.png';\r\nimport styleTransferImg from '../images/style_transfer.png';\r\nimport constructionImg from '../images/construction.png';\r\n\r\nfunction Card(props){\r\n  let history = useHistory();\r\n  let imgSrc;\r\n  switch(props.mlFunct){\r\n    case 'meme':\r\n    imgSrc = memeImg;\r\n    break;\r\n\r\n    case 'translator':\r\n    imgSrc = translatorImg;\r\n    break;\r\n\r\n    case 'style':\r\n    imgSrc = styleTransferImg;\r\n    break;\r\n\r\n    default:\r\n    imgSrc = constructionImg;\r\n  }\r\n\r\n  function handleOnClick(){\r\n    if(props.mlFunct === 'construction'){\r\n      return;\r\n    }\r\n    history.push(`/image/${props.mlFunct}`);\r\n  }\r\n\r\n  return(\r\n    <div className='card-div' onClick={handleOnClick}>\r\n      <h1 className='card-title'>{props.title}</h1>\r\n      <img src={imgSrc} className='img-card' alt={props.title}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nfunction CardList(){\r\n  let list = ['Meme swapper','Object translator','Style transfer','Still under construction','Still under construction','Still under construction'];\r\n  let mlFunctions = ['meme', 'translator', 'style', 'construction', 'construction','construction'];\r\n\r\n  return (\r\n    <div className='row row-cols-1 row-cols-lg-3 row-cols-md-2 app-container'>\r\n      {list.map((item, index) => <div className='col mb-3' key={item+index}>\r\n        <Card title={item} mlFunct={mlFunctions[index]}/>\r\n      </div>)}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;\r\n","export default __webpack_public_path__ + \"static/media/logo.9995f34a.png\";","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport logoImg from '../images/logo.png';\r\n\r\nfunction Heading(props){\r\n  let history = useHistory();\r\n\r\n  function toHome(){\r\n    history.replace('/');\r\n  }\r\n\r\n\r\n  return(\r\n    <div className='heading'>\r\n      <img src={logoImg} alt='logo' className='logo' onClick={toHome}/>\r\n\r\n      <h1>{props.head}</h1>\r\n      <p>{props.subHead}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\nimport CardList from './CardList';\r\nimport Heading from './Heading';\r\nfunction Home(){\r\n  const head = 'Welcome to AI Gallery';\r\n  const subHead = 'where you can use machine learning to do lots of cool stuff with an image';\r\n\r\n  return(\r\n    <div>\r\n      <Heading head={head} subHead={subHead}/>\r\n      <CardList />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nfunction Footer(){\r\n\r\n  const arlyn = \"https://github.com/Acrylami\";\r\n  const osas = \"https://github.com/david-osas\";\r\n  const yashika = \"https://github.com/yashika51\";\r\n\r\n  return(\r\n    <footer className='footer'>\r\n      <p className='footer-text'>Made with\r\n        &nbsp;\r\n        <FavoriteIcon className='heart'/>\r\n        &nbsp;\r\n        by\r\n        <a href={osas} className='footer-link' target='_blank' rel='noreferrer'> <em>Osas</em> </a>,\r\n        <a href={yashika} className='footer-link' target='_blank' rel='noreferrer'> <em>Yashika</em> </a>,\r\n        <a href={arlyn} className='footer-link' target='_blank' rel='noreferrer'> <em>Arlyn</em> </a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","const data = {\r\n  meme: {\r\n    head: 'Welcome to Meme swapper',\r\n    subHead: 'upload a picture with a face and let our application swap it with a meme',\r\n  },\r\n  translator: {\r\n    head: 'Welcome to Object translator',\r\n    subHead: 'upload a picture of an object and let our application tell you the names of the uploaded object in different languages',\r\n  },\r\n  style: {\r\n    head: 'Welcome to style transfer',\r\n    subHead: 'upload a content image and a style image and let our application paint your content image with the styles in your style image',\r\n  }\r\n}\r\n\r\n\r\nexport default data;\r\n","import React from 'react';\r\n\r\nfunction InputImage({input, handleImage, imgRef, imgText}){\r\n  const id = imgText === 'input'? 'file':imgText;\r\n\r\n  return(\r\n    <div>\r\n      <h3>Your {imgText} image</h3>\r\n      <img ref={imgRef} id = \"input\" src = {input} alt = 'input' className = 'app-img' />\r\n      <input type = \"file\" accept = \"image/*\" name = \"image\" id={id} style = {{display: 'none'}} onChange = {handleImage}/>\r\n      <div className = 'upload-div'>\r\n        <label htmlFor={id} className = 'btn btn-outline-primary upload-label'> Upload Image </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputImage;\r\n","import React from 'react';\r\n\r\n\r\nfunction UploadBtn({handleUploadBtn, btnText}){\r\n\r\n  return(\r\n    <div className = 'upload-div'>\r\n      <button type = 'button' className = 'btn btn-primary' onClick = {handleUploadBtn}>\r\n        {btnText}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadBtn;\r\n","export default __webpack_public_path__ + \"static/media/input.96156881.png\";","export default __webpack_public_path__ + \"static/media/swap.b0be6a7d.png\";","export default __webpack_public_path__ + \"static/media/loading.a74b50f6.gif\";","import React, {useState, useRef} from 'react';\r\nimport InputImage from './InputImage';\r\nimport UploadBtn from './UploadBtn';\r\nimport inputImg from '../images/input.png';\r\nimport swapImg from '../images/swap.png';\r\nimport loadingImg from '../images/loading.gif';\r\n\r\nfunction MemeSwapper() {\r\n  let [input, setInput] = useState(inputImg);\r\n  let [imgBlob, setImgBlob] = useState(null);\r\n  let [output, setOutput] = useState([swapImg, 'Your output image']);\r\n  let imgRef = useRef(null);\r\n\r\n  function handleImage(e) {\r\n    if(!e.target.files[0]){\r\n      return;\r\n    }\r\n    setImgBlob(e.target.files[0]);\r\n    setInput(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n\r\n  async function handleSwapBtn(e) {\r\n    e.preventDefault();\r\n    if (imgBlob === null) {\r\n      alert('input an image');\r\n      return;\r\n    }\r\n    setOutput([loadingImg, 'Hold on, your input image is been swapped']);\r\n    imgRef.current.scrollIntoView({behavior: \"smooth\"});\r\n    const data = new FormData();\r\n    data.append('image', imgBlob, imgBlob.name);\r\n    let options = {\r\n        method: 'POST',\r\n        body: data,\r\n    };\r\n    let response = await fetch('/server/upload', options);\r\n    if(response){\r\n      let resText = await response.text();\r\n      if(resText === 'not detected'){\r\n        setOutput([swapImg, 'No face was detected in your input image, try another image']);\r\n\r\n      }else{\r\n        const newSrc = `data:image/png;base64,${resText}`;\r\n        setOutput([newSrc, 'Your swapped image']);\r\n      }\r\n    }else{\r\n      console.log('sorry, got no image response');\r\n    }\r\n  }\r\n  const uploadText = 'Initiate swapping';\r\n\r\n\r\n  return (\r\n    <div>\r\n      <InputImage input={input} handleImage={handleImage} imgText='input'/>\r\n      <UploadBtn btnText={uploadText} handleUploadBtn={handleSwapBtn}/>\r\n\r\n      <h3>{output[1]}</h3>\r\n      <img id = \"output\" ref={imgRef} src = {output[0]} alt = 'output' className = 'app-img' />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MemeSwapper;\r\n","export default __webpack_public_path__ + \"static/media/objects.52845dd1.png\";","import React, {useState, useRef} from 'react';\r\nimport '@tensorflow/tfjs-backend-cpu';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\r\nimport InputImage from './InputImage';\r\nimport UploadBtn from './UploadBtn';\r\nimport objectImg from '../images/objects.png';\r\nimport loadingImg from '../images/loading.gif';\r\n\r\n\r\nfunction Translator(){\r\n  let [input, setInput] = useState(objectImg);\r\n  let [translate, setTranslate] = useState([]);\r\n  let [detect, setDetect] = useState(['','hidden']);\r\n  let [name, setName] = useState('');\r\n  let imgRef = useRef(null);\r\n  let loadingRef = useRef(null);\r\n\r\n  function handleImage(e) {\r\n    if(!e.target.files[0]){\r\n      return;\r\n    }\r\n    setInput(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n\r\n  async function detectObjects(){\r\n    setDetect(['', 'hidden']);\r\n    setTranslate([]);\r\n    if (input === objectImg) {\r\n      alert('input an image');\r\n      return;\r\n    }\r\n    setDetect(['Detecting object in picture','visible']);\r\n    loadingRef.current.scrollIntoView({behavior: \"smooth\"});\r\n    const model = await cocoSsd.load();\r\n    const predictions = await model.detect(imgRef.current);\r\n    if(predictions.length >= 1){\r\n      console.log('object detected');\r\n    }else{\r\n      setDetect(['No object detected, try uploading a different image', 'hidden'])\r\n      return;\r\n    }\r\n    let nameSet = new Set();\r\n    for(let i = 0; i < predictions.length; i++){\r\n      nameSet.add(predictions[i].class);\r\n      if(nameSet.size > 1){\r\n        setDetect(['More than one object detected, try uploading an image with generally one object', 'hidden'])\r\n        return;\r\n      }\r\n    }\r\n    const iterator = nameSet.values();\r\n    const value = iterator.next().value;\r\n    setName(value);\r\n\r\n    let options = {\r\n      \"method\": \"POST\",\r\n      \"body\": JSON.stringify({name: value}),\r\n    \t\"headers\": {\r\n    \t\t\"content-type\": \"application/json\",\r\n      },\r\n    };\r\n    setDetect(['Translating object name to other languages', 'visible']);\r\n    let response = await fetch('/server/translate',options);\r\n    const resText = await response.json();\r\n    setDetect(['Object translation is done', 'hidden']);\r\n    setTranslate(resText);\r\n\r\n  }\r\n  const uploadText = 'Detect objects';\r\n\r\n  return(\r\n    <div>\r\n      <InputImage imgRef={imgRef} input={input} handleImage={handleImage} imgText='input'/>\r\n      <UploadBtn btnText={uploadText} handleUploadBtn={detectObjects}/>\r\n      {detect[0].length > 0 && <h3>{detect[0]}</h3>}\r\n\r\n      <img id = \"output\" ref={loadingRef} style={{\r\n        visibility: detect[1], display: detect[0].length > 0 && translate.length > 0?\r\n      'none' : 'block'}}\r\n        src = {loadingImg} alt = 'output' className = 'app-img' />\r\n      {translate.length > 0 && <hr className='object-hr'/>}\r\n      {translate.length > 0 && <p className='object-title'>Name of object detected is <b>{name}</b></p>}\r\n      {translate.length > 0 && translate.map((item) => <p key={item[0]}>{item[0]} : {item[1]}</p>)}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Translator;\r\n","export default __webpack_public_path__ + \"static/media/content.8b9631d0.png\";","export default __webpack_public_path__ + \"static/media/style.30f87267.png\";","export default __webpack_public_path__ + \"static/media/transfer.596dee8e.png\";","import React, {useState, useRef} from 'react';\r\nimport InputImage from './InputImage';\r\nimport UploadBtn from './UploadBtn';\r\nimport contentImg from '../images/content.png';\r\nimport styleImg from '../images/style.png';\r\nimport transferImg from '../images/transfer.png';\r\nimport loadingImg from '../images/loading.gif';\r\n\r\nfunction StyleTransfer(){\r\n  let [content, setContent] = useState(contentImg);\r\n  let [style, setStyle] = useState(styleImg);\r\n  let [transfer, setTransfer] = useState(transferImg);\r\n  let [contentBlob, setContentBlob] = useState(null);\r\n  let [styleBlob, setStyleBlob] = useState(null);\r\n\r\n  let transferRef = useRef(null);\r\n\r\n  function handleContent(e) {\r\n    if(!e.target.files[0]){\r\n      return;\r\n    }\r\n    setContentBlob(e.target.files[0]);\r\n    setContent(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n\r\n  function handleStyle(e) {\r\n    if(!e.target.files[0]){\r\n      return;\r\n    }\r\n    setStyleBlob(e.target.files[0]);\r\n    setStyle(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n\r\n  async function startStyleTransfer(){\r\n    if(content === contentImg || style === styleImg){\r\n      alert('please upload a content image and a style image');\r\n      return;\r\n    }\r\n    const data = new FormData();\r\n    data.append('content', contentBlob, contentBlob.name);\r\n    data.append('style', styleBlob, styleBlob.name);\r\n    let options = {\r\n      method: 'POST',\r\n      body: data,\r\n    }\r\n    setTransfer(loadingImg);\r\n    transferRef.current.scrollIntoView({behavior: \"smooth\"});\r\n    let response = await fetch('/server/style-transfer', options);\r\n    if(response){\r\n      console.log('I got a response');\r\n      let resText = await response.text();\r\n      if(resText){\r\n        console.log('I got an image blob');\r\n        const newSrc = `data:image/png;base64,${resText}`;\r\n        setTransfer(newSrc);\r\n        return;\r\n      }else{\r\n        console.log('no image base64 str');\r\n      }\r\n    }else{\r\n      console.log('no response');\r\n    }\r\n    setTransfer(transferImg);\r\n\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div className='row row-cols-1 row-cols-md-2'>\r\n        <div className='col'>\r\n          <InputImage input={content} handleImage={handleContent} imgText='content'/>\r\n        </div>\r\n        <div className='col'>\r\n          <InputImage input={style} handleImage={handleStyle} imgText='style'/>\r\n        </div>\r\n      </div>\r\n      <UploadBtn handleUploadBtn={startStyleTransfer} btnText='Start style transfer' />\r\n      <h3>Your output image</h3>\r\n      <img id = \"output\" ref={transferRef} src={transfer} alt='style transfer' className='app-img' />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StyleTransfer;\r\n","import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport data from '../data';\r\nimport Heading from './Heading';\r\nimport MemeSwapper from './MemeSwapper';\r\nimport Translator from './Translator';\r\nimport StyleTransfer from './StyleTransfer';\r\n\r\n\r\nfunction Function(){\r\n  let {feature} = useParams();\r\n  let values = data[feature];\r\n\r\n  return(\r\n    <div>\r\n      <Heading head={values.head} subHead={values.subHead}/>\r\n      <div className='app-container'>\r\n        {feature === 'meme' && <MemeSwapper />}\r\n        {feature === 'translator' && <Translator />}\r\n        {feature === 'style' && <StyleTransfer />}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Function;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Home from './Home';\r\nimport Footer from './Footer';\r\nimport Function from './Function';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route exact path='/image/:feature'>\r\n        <Function />\r\n      </Route>\r\n\r\n\r\n    </Switch>\r\n    <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}